#getting the mean prediction and the uncertainty around it for the regression line
mu_1 <- link(m_1, data=data.frame(area = sim_area))
mu_mean <- apply(mu_1, 2, mean)
mu_PI <- apply(mu_1, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean)
#PI for regression line
shade(mu_PI, sim_area)
#model 2 weight ~ groupsize
#average group size for foxes
avg_gsize <- mean(foxes$groupsize)
avg_gsize
max(foxes$groupsize)
#fitting model
m_2 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b * (groupsize), #- avg_gsize), #the linear model
a ~ dnorm(5, 2), #prior for alpha
b ~ dnorm(0, 1), #prior for beta
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#getting predictions from the model
#a sequence to get predictions
sim_gsize <- seq(from = 1, to = 20, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_2 <- link(m_2, data=data.frame(groupsize = sim_gsize))
mu_mean2 <- apply(mu_2, 2, mean)
mu_PI2 <- apply(mu_2, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ groupsize, data=foxes, col="red" )
mtext("weight~groupsize" )
#MAP regression line
lines(sim_gsize, mu_mean2)
#PI for regression line
shade(mu_PI2, sim_gsize)
#model 3 weight ~ groupsize + area
#average area for foxes
avg_area <- mean(foxes$area)
#average group size for foxes
avg_gsize <- mean(foxes$groupsize)
#fitting model
m_3 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area, #the linear model (with centering)
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_3, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize)))
mu_mean4 <- apply(mu_4, 2, mean)
mu_PI4 <- apply(mu_4, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean4)
#PI for regression line
shade(mu_PI4, sim_area)
#predictions
#a sequence to get predictions for groupsize
sim_gsize <- seq(from = 1, to = 20, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_3 <- link(m_3, data=data.frame(groupsize = sim_gsize, area = avg_area))
mu_mean3 <- apply(mu_3, 2, mean)
mu_PI3 <- apply(mu_3, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ groupsize, data=foxes, col="red" )
mtext("weight~groupsize" )
#MAP regression line
lines(sim_gsize, mu_mean3)
#PI for regression line
shade(mu_PI3, sim_gsize)
#model 4 weight ~ groupsize + avgfood
m_4 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#model 5 weight ~ groupsize + area + avgfood
m_5 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_32 <- link(m_3, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize)))
mu_mean32 <- apply(mu_32, 2, mean)
mu_PI32 <- apply(mu_32, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean32)
#PI for regression line
shade(mu_PI32, sim_area)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_32 <- link(m_3, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize)))
mu_mean32 <- apply(mu_32, 2, mean)
mu_PI32 <- apply(mu_32, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean32)
#PI for regression line
shade(mu_PI32, sim_area)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_32 <- link(m_3, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize)))
mu_mean32 <- apply(mu_32, 2, mean)
mu_PI32 <- apply(mu_32, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean32)
#PI for regression line
shade(mu_PI32, sim_area)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_32 <- link(m_3, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize)))
mu_mean32 <- apply(mu_32, 2, mean)
mu_PI32 <- apply(mu_32, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean32)
#PI for regression line
shade(mu_PI32, sim_area)
# 3H1
# Find the posterior probability of giving birth to a boy:
pacman::p_load(rethinking)
data(homeworkch3)
set.seed(1)
W <- sum(birth1) + sum(birth2)
N <- length(birth1) + length(birth2)
p_grid <-seq(from =0, to = 1, len =1000)
prob_p <- rep(1,1000)
prob_data <- dbinom(W,N,prob=p_grid)
posterior <-prob_data * prob_p
posterior <- posterior / sum(posterior)
# 3H2
# Sample probabilities from posterior distribution:
samples <- sample (p_grid, prob = posterior, size =1e4, replace =TRUE)
# 3H3
# Simulate births using sampled probabilities as simulation input, and check if they allign with real value.
simulated_births <- rbinom(n = 1e4, size = N, prob = samples)
rethinking::dens(simulated_births,show.HPDI = 0.95)
abline(v=W, col="red")
title("Simulated amount of boys in 200 births - red line is real value")
set.seed(1)
#calculating posterior for first borns only
p_grid <-seq(from =0, to = 1, len =1000)
prob_h4 <- rep(0.5,1000)
likelihood <- dbinom(sum(birth1), 100, prob = p_grid)
posterior_h4 <- prob_h4 * likelihood
posterior_h4 <- posterior_h4 / sum(posterior_h4)
#sampling from the posterior
samples_h4 <- sample (p_grid, prob = posterior_h4, size =1e4, replace =TRUE)
#simulating births
simulated_births_h4 <- rbinom(n = 1e4, size = 100, prob = samples_h4)
rethinking::dens(simulated_births_h4,show.HPDI = 0.95)
abline(v=sum(birth1), col="red")
title("Simulated amount of boys in 100 births - red line is real value")
set.seed(1)
#creating and applying a filter for girls born first
filter <- ifelse(birth1 == 0, TRUE, FALSE)
girls_first_second_borns <- birth2[filter]
length(girls_first_second_borns)
sum(girls_first_second_borns)
#getting a posterior for the counts of boys
p_grid <-seq(from =0, to = 1, len =1000)
prob_h5 <- rep(0.5,1000)
likelihood_h5 <- dbinom(sum(girls_first_second_borns), length(girls_first_second_borns), prob = p_grid)
posterior_h5 <- prob_h5 * likelihood_h5
posterior_h5 <- posterior_h5 / sum(posterior_h5)
#sampling from the posterior
samples_h5 <- sample (p_grid, prob = posterior_h5, size =1e4, replace =TRUE)
#simulating births
simulated_births_h5 <- rbinom(n = 1e4, size = length(girls_first_second_borns), prob = samples_h5)
rethinking::dens(simulated_births_h5,show.HPDI = 0.95)
abline(v=sum(girls_first_second_borns), col="red")
title("Simulated amount of boys for families with girl first borns - red line is real value")
#loading data
pacman::p_load(rethinking)
data(foxes)
#model 1. weight ~ area
#fitting model
m_1 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b * (area), #the linear model
a ~ dnorm(3, 1), #prior for alpha
b ~ dlnorm(0, 1), #prior for beta, a positive relationship is to be expected, thus the prior does not include negative values
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_1 <- link(m_1, data=data.frame(area = sim_area))
mu_mean <- apply(mu_1, 2, mean)
mu_PI <- apply(mu_1, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean)
#PI for regression line
shade(mu_PI, sim_area)
#model 2 weight ~ groupsize
#average group size for foxes
avg_gsize <- mean(foxes$groupsize)
avg_gsize
max(foxes$groupsize)
#fitting model
m_2 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b * (groupsize),  #the linear model
a ~ dnorm(5, 2), #prior for alpha
b ~ dnorm(0, 1), #prior for beta
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#getting predictions from the model
#a sequence to get predictions
sim_gsize <- seq(from = 1, to = 20, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_2 <- link(m_2, data=data.frame(groupsize = sim_gsize))
mu_mean2 <- apply(mu_2, 2, mean)
mu_PI2 <- apply(mu_2, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ groupsize, data=foxes, col="red" )
mtext("weight~groupsize" )
#MAP regression line
lines(sim_gsize, mu_mean2)
#PI for regression line
shade(mu_PI2, sim_gsize)
#model 3 weight ~ groupsize + area
#fitting model
m_3 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_32 <- link(m_3, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize)))
mu_mean32 <- apply(mu_32, 2, mean)
mu_PI32 <- apply(mu_32, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean32)
#PI for regression line
shade(mu_PI32, sim_area)
#predictions
#a sequence to get predictions for groupsize
sim_gsize <- seq(from = 1, to = 20, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_3 <- link(m_3, data=data.frame(groupsize = sim_gsize, area = mean(foxes$area)))
mu_mean3 <- apply(mu_3, 2, mean)
mu_PI3 <- apply(mu_3, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ groupsize, data=foxes, col="red" )
mtext("weight~groupsize" )
#MAP regression line
lines(sim_gsize, mu_mean3)
#PI for regression line
shade(mu_PI3, sim_gsize)
#model 4 weight ~ groupsize + avgfood
m_4 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#model 5 weight ~ groupsize + area + avgfood
m_5 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#comparing area and avgfood as predictors (controlled for groupsize, and avgfood)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_4, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize, avgfood = mean(foxes$avgfood))))
#model 4 weight ~ groupsize + avgfood
m_4 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#model 5 weight ~ groupsize + area + avgfood
m_5 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
View(foxes)
#comparing area and avgfood as predictors (controlled for groupsize, and avgfood)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_4, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize, avgfood = mean(foxes$avgfood))))
#comparing area and avgfood as predictors (controlled for groupsize, and avgfood)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_5, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize, avgfood = mean(foxes$avgfood))))
View(foxes)
foxes$avgfood
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_5, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize, avgfood = mean(foxes$avgfood))))
#comparing area and avgfood as predictors (controlled for groupsize, and avgfood)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_5, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize), avgfood = mean(foxes$avgfood))))
#comparing area and avgfood as predictors (controlled for groupsize, and avgfood)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_4 <- link(m_5, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize), avgfood = mean(foxes$avgfood)))
mu_mean4 <- apply(mu_4, 2, mean)
mu_PI4 <- apply(mu_4, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean4)
#PI for regression line
shade(mu_PI4, sim_area)
#comparing area and avgfood as predictors (controlled for groupsize, and avgfood)
#getting predictions from the model
#a sequence of area sizes to get predictions
sim_area <- seq(from = 1, to = 10, by = 1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_5 <- link(m_5, data=data.frame(area = sim_area, groupsize = mean(foxes$groupsize), avgfood = mean(foxes$avgfood)))
mu_mean5 <- apply(mu_5, 2, mean)
mu_PI5 <- apply(mu_5, 2, PI, prob = 0.95)
#plotting
#raw data
plot( weight ~ area, data=foxes, col="red" )
mtext("weight~area" )
#MAP regression line
lines(sim_area, mu_mean5)
#PI for regression line
shade(mu_PI5, sim_area)
#model 4 weight ~ groupsize + avgfood
m_4 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#model 5 weight ~ groupsize + area + avgfood
m_5 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
precis(m_4)
precis(m_5)
#getting predictions from the model
#the simulated (average) food for estimates
sim_food <- seq(from = 0, to = 2, by = 0.1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_51 <- link(m_5, data=data.frame(area = mean(foxes$araea), groupsize = mean(foxes$groupsize), avgfood = sim_food))
mu_mean51 <- apply(mu_51, 2, mean)
mu_PI51 <- apply(mu_51, 2, PI, prob = 0.95)
#getting predictions from the model
#the simulated (average) food for estimates
sim_food <- seq(from = 0, to = 2, by = 0.1)
#getting the mean prediction and the uncertainty around it for the regression line
mu_51 <- link(m_5, data=data.frame(area = mean(foxes$araea), groupsize = mean(foxes$groupsize), avgfood = sim_food))
mu_mean51 <- apply(mu_51, 2, mean)
mu_PI51 <- apply(mu_51, 2, PI, prob = 0.95)
#model 4 weight ~ groupsize + avgfood
m_4 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
#model 5 weight ~ groupsize + area + avgfood
m_5 <- quap(
alist(
weight ~ dnorm(mu, sigma), #the likelihood
mu <- a + b_g * groupsize + b_a * area + b_f * avgfood, #the linear model
a ~ dnorm(5, 2), #prior for alpha
b_g ~ dnorm(0, 1), #prior for coefficient for groupsize
b_a ~ dnorm(0, 1), #prior for coefficient for area
b_f ~ dnorm(0, 1), #prior for coefficient for food
sigma ~ dunif(0, 50) #uniform prior for sigma 0-50
) ,
data = foxes)
precis(m_4)
precis(m_5)
pacman::p_load(dagitty,
ggdag)
dag <- dagitty('dag {
A[pos="1.000,0.500"]
F[pos="0.000,0.000"]
G[pos="2.000,0.000"]
W[pos="1.000,-0.500"]
A -> F
F -> G
F -> W
G -> W
}')
# Plot the DAG
ggdag(dag, layout = "circle")+
theme_dag()
